<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinyi.flashsale.db.mappers.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.xinyi.flashsale.db.model.Activity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="old_price" jdbcType="DECIMAL" property="oldPrice" />
    <result column="seckill_price" jdbcType="DECIMAL" property="seckillPrice" />
    <result column="activity_status" jdbcType="INTEGER" property="activityStatus" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="total_stock" jdbcType="BIGINT" property="totalStock" />
    <result column="avaiable_stock" jdbcType="BIGINT" property="avaiableStock" />
    <result column="lock_stock" jdbcType="BIGINT" property="lockStock" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, product_id, old_price, seckill_price, activity_status, start_time, end_time, 
    total_stock, avaiable_stock, lock_stock
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getAllActivities" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from activity
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from activity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xinyi.flashsale.db.model.Activity" useGeneratedKeys="true" keyProperty="id">
    insert into activity (name, product_id,
      old_price, seckill_price, activity_status, 
      start_time, end_time, total_stock, 
      avaiable_stock, lock_stock)
    values ( #{name,jdbcType=VARCHAR}, #{productId,jdbcType=BIGINT},
      #{oldPrice,jdbcType=DECIMAL}, #{seckillPrice,jdbcType=DECIMAL}, #{activityStatus,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{totalStock,jdbcType=BIGINT}, 
      #{avaiableStock,jdbcType=BIGINT}, #{lockStock,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xinyi.flashsale.db.model.Activity">
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="oldPrice != null">
        old_price,
      </if>
      <if test="seckillPrice != null">
        seckill_price,
      </if>
      <if test="activityStatus != null">
        activity_status,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="totalStock != null">
        total_stock,
      </if>
      <if test="avaiableStock != null">
        avaiable_stock,
      </if>
      <if test="lockStock != null">
        lock_stock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="oldPrice != null">
        #{oldPrice,jdbcType=DECIMAL},
      </if>
      <if test="seckillPrice != null">
        #{seckillPrice,jdbcType=DECIMAL},
      </if>
      <if test="activityStatus != null">
        #{activityStatus,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalStock != null">
        #{totalStock,jdbcType=BIGINT},
      </if>
      <if test="avaiableStock != null">
        #{avaiableStock,jdbcType=BIGINT},
      </if>
      <if test="lockStock != null">
        #{lockStock,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinyi.flashsale.db.model.Activity">
    update activity
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="oldPrice != null">
        old_price = #{oldPrice,jdbcType=DECIMAL},
      </if>
      <if test="seckillPrice != null">
        seckill_price = #{seckillPrice,jdbcType=DECIMAL},
      </if>
      <if test="activityStatus != null">
        activity_status = #{activityStatus,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalStock != null">
        total_stock = #{totalStock,jdbcType=BIGINT},
      </if>
      <if test="avaiableStock != null">
        avaiable_stock = #{avaiableStock,jdbcType=BIGINT},
      </if>
      <if test="lockStock != null">
        lock_stock = #{lockStock,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinyi.flashsale.db.model.Activity">
    update activity
    set name = #{name,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=BIGINT},
      old_price = #{oldPrice,jdbcType=DECIMAL},
      seckill_price = #{seckillPrice,jdbcType=DECIMAL},
      activity_status = #{activityStatus,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      total_stock = #{totalStock,jdbcType=BIGINT},
      avaiable_stock = #{avaiableStock,jdbcType=BIGINT},
      lock_stock = #{lockStock,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="lockStock" parameterType="java.lang.Long">
    update activity
    set avaiable_stock = avaiable_stock - 1,
        lock_stock = lock_stock + 1
    where id = #{id,jdbcType=BIGINT}
      and  avaiable_stock > 0
  </update>
  <update id="deductStock" parameterType="java.lang.Long">
    UPDATE activity
    SET lock_stock = lock_stock - 1
    WHERE id = #{id,jdbcType=BIGINT}
  </update>

  <update id="revertStock" parameterType="java.lang.Long">
    update activity
    set available_stock = available_stock + 1,
        lock_stock = lock_stock - 1
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>